[{"Uid":"nuitrack.PlatformChanger.EnviromentSwitcher","Type":"class","Syntax":{"content":"public class EnviromentSwitcher : MonoBehaviour","content.vb":"Public Class EnviromentSwitcher\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.PlatformChanger.EnviromentSwitcher.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.BackTextureCreator","Type":"class","Syntax":{"content":"public class BackTextureCreator : MonoBehaviour","content.vb":"Public Class BackTextureCreator\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.VicoVRCalibration.BackTextureCreator.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.BackTextureCreator.GetRGBTexture","Type":"property","Syntax":{"content":"public Texture GetRGBTexture { get; }","parameters":[],"return":{"type":"UnityEngine.Texture"},"content.vb":"Public ReadOnly Property GetRGBTexture As Texture"},"File":"obj/api/nuitrack.VicoVRCalibration.BackTextureCreator.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.BackTextureCreator.GetUserTexture","Type":"property","Syntax":{"content":"public Texture GetUserTexture { get; }","parameters":[],"return":{"type":"UnityEngine.Texture"},"content.vb":"Public ReadOnly Property GetUserTexture As Texture"},"File":"obj/api/nuitrack.VicoVRCalibration.BackTextureCreator.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.BackTextureCreator.newTextureEvent","Type":"event","Syntax":{"content":"public static event BackTextureCreator.newBackGroundCreate newTextureEvent","return":{"type":"nuitrack.VicoVRCalibration.BackTextureCreator.newBackGroundCreate"},"content.vb":"Public Shared Event newTextureEvent As BackTextureCreator.newBackGroundCreate"},"File":"obj/api/nuitrack.VicoVRCalibration.BackTextureCreator.yml","Metadata":{"type":"event","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer","Type":"namespace","File":"obj/api/nuitrack.Pointer.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils","Type":"class","Syntax":{"content":"public class TextureUtils : MonoBehaviour","content.vb":"Public Class TextureUtils\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils.Awake","Type":"method","Syntax":{"content":"protected virtual void Awake()","content.vb":"Protected Overridable Sub Awake"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils.Cut(UnityEngine.Texture,UnityEngine.Texture,UnityEngine.RenderTexture@)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Cut images by the alpha channel of the mask by removing the background. \nA hard transition of the alpha channel is used (alpha &gt; 0)</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","Type":"method","Syntax":{"content":"public void Cut(Texture texture, Texture mask, ref RenderTexture dest)","parameters":[{"id":"texture","type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source texture</p>\n"},{"id":"mask","type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source mask</p>\n"},{"id":"dest","type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The RenderTexture to which the converted image will be saved.</p>\n"}],"content.vb":"Public Sub Cut(texture As Texture, mask As Texture, ByRef dest As RenderTexture)"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Cut images by the alpha channel of the mask by removing the background. \nA hard transition of the alpha channel is used (alpha &gt; 0)</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils.ReverseCut(UnityEngine.Texture,UnityEngine.Texture,UnityEngine.RenderTexture@)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Cut the images by the alpha channel of the mask leaving the background. \nA hard transition of the alpha channel is used (alpha &gt; 0)</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","Type":"method","Syntax":{"content":"public void ReverseCut(Texture texture, Texture mask, ref RenderTexture dest)","parameters":[{"id":"texture","type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source texture</p>\n"},{"id":"mask","type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source mask</p>\n"},{"id":"dest","type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The RenderTexture to which the converted image will be saved.</p>\n"}],"content.vb":"Public Sub ReverseCut(texture As Texture, mask As Texture, ByRef dest As RenderTexture)"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Cut the images by the alpha channel of the mask leaving the background. \nA hard transition of the alpha channel is used (alpha &gt; 0)</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils.Mul(UnityEngine.Texture,UnityEngine.Texture,UnityEngine.RenderTexture@)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Mix textures by multiplying them.</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","Type":"method","Syntax":{"content":"public void Mul(Texture texture1, Texture texture2, ref RenderTexture dest)","parameters":[{"id":"texture1","type":"UnityEngine.Texture"},{"id":"texture2","type":"UnityEngine.Texture"},{"id":"dest","type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The RenderTexture to which the converted image will be saved.</p>\n"}],"content.vb":"Public Sub Mul(texture1 As Texture, texture2 As Texture, ByRef dest As RenderTexture)"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Mix textures by multiplying them.</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils.MixMask(UnityEngine.Texture,UnityEngine.Texture,UnityEngine.RenderTexture@)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Blend textures by mask by getting the average value.\nA hard transition of the alpha channel is used (alpha &gt; 0)</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","Type":"method","Syntax":{"content":"public void MixMask(Texture texture, Texture mask, ref RenderTexture dest)","parameters":[{"id":"texture","type":"UnityEngine.Texture","description":""},{"id":"mask","type":"UnityEngine.Texture","description":""},{"id":"dest","type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">The RenderTexture to which the converted image will be saved.</p>\n"}],"content.vb":"Public Sub MixMask(texture As Texture, mask As Texture, ByRef dest As RenderTexture)"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Blend textures by mask by getting the average value.\nA hard transition of the alpha channel is used (alpha &gt; 0)</p>\n<p>Note: For the correct result, the textures must have the same resolution.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils.Copy(UnityEngine.Texture2D,UnityEngine.RenderTexture@)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Copy Texture2D to RenderTexture.</p>\n","Type":"method","Syntax":{"content":"public void Copy(Texture2D source, ref RenderTexture dest)","parameters":[{"id":"source","type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source Texture2D</p>\n"},{"id":"dest","type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">Destination RenderTexture. Can be null. \nIf not null and the resolution or format does not match, the RenderTexture will be reinitialized.</p>\n"}],"content.vb":"Public Sub Copy(source As Texture2D, ByRef dest As RenderTexture)"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Copy Texture2D to RenderTexture.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureUtils.Copy(UnityEngine.RenderTexture,UnityEngine.Texture2D@)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Copy RenderTexture to Texture2D.</p>\n","Type":"method","Syntax":{"content":"public void Copy(RenderTexture source, ref Texture2D dest)","parameters":[{"id":"source","type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source RenderTexture</p>\n"},{"id":"dest","type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">Destination Texture2D. Can be null.\nIf not null and the resolution or format does not match, the Texture2D will be reinitialized.</p>\n"}],"content.vb":"Public Sub Copy(source As RenderTexture, ByRef dest As Texture2D)"},"File":"obj/api/nuitrack.Frame.TextureUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.TextureUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Copy RenderTexture to Texture2D.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.PlatformChanger.GameVersion","Type":"class","Syntax":{"content":"public class GameVersion","content.vb":"Public Class GameVersion"},"File":"obj/api/nuitrack.PlatformChanger.GameVersion.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.PlatformChanger.GameVersion.currentPlatform","Type":"field","Syntax":{"content":"public static Platform? currentPlatform","return":{"type":"System.Nullable{Platform}"},"content.vb":"Public Shared currentPlatform As Platform?"},"File":"obj/api/nuitrack.PlatformChanger.GameVersion.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.PlatformChanger.GameVersion.GetData","Type":"method","Syntax":{"content":"public static void GetData()","content.vb":"Public Shared Sub GetData"},"File":"obj/api/nuitrack.PlatformChanger.GameVersion.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.SensorDisconnectChecker.ConnectionStatusChange","Type":"delegate","Syntax":{"content":"public delegate void ConnectionStatusChange();","content.vb":"Public Delegate Sub ConnectionStatusChange"},"File":"obj/api/nuitrack.VicoVRCalibration.SensorDisconnectChecker.ConnectionStatusChange.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerPassing","Type":"class","Syntax":{"content":"public class PointerPassing : MonoBehaviour","content.vb":"Public Class PointerPassing\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.Pointer.PointerPassing.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerPassing.hand","Type":"field","Syntax":{"content":"public static int hand","return":{"type":"System.Int32"},"content.vb":"Public Shared hand As Integer"},"File":"obj/api/nuitrack.Pointer.PointerPassing.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerPassing.OnPressed","Type":"event","Syntax":{"content":"public static event PointerPassing.ClickAction OnPressed","return":{"type":"nuitrack.Pointer.PointerPassing.ClickAction"},"content.vb":"Public Shared Event OnPressed As PointerPassing.ClickAction"},"File":"obj/api/nuitrack.Pointer.PointerPassing.yml","Metadata":{"type":"event","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerPassing.OnCalibration","Type":"event","Syntax":{"content":"public static event PointerPassing.CalibrationAction OnCalibration","return":{"type":"nuitrack.Pointer.PointerPassing.CalibrationAction"},"content.vb":"Public Shared Event OnCalibration As PointerPassing.CalibrationAction"},"File":"obj/api/nuitrack.Pointer.PointerPassing.yml","Metadata":{"type":"event","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerPassing.ClickAction","Type":"delegate","Syntax":{"content":"public delegate void ClickAction(int buttonID, int eventID);","parameters":[{"id":"buttonID","type":"System.Int32"},{"id":"eventID","type":"System.Int32"}],"content.vb":"Public Delegate Sub ClickAction(buttonID As Integer, eventID As Integer)"},"File":"obj/api/nuitrack.Pointer.PointerPassing.ClickAction.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.RGBCalibrationVisualizer","Type":"class","Syntax":{"content":"public class RGBCalibrationVisualizer : MonoBehaviour","content.vb":"Public Class RGBCalibrationVisualizer\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.VicoVRCalibration.RGBCalibrationVisualizer.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.RGBCalibrationVisualizer.StartStream","Type":"method","Syntax":{"content":"public void StartStream()","content.vb":"Public Sub StartStream"},"File":"obj/api/nuitrack.VicoVRCalibration.RGBCalibrationVisualizer.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.RGBCalibrationVisualizer.CloseStream(UnityEngine.Quaternion)","Type":"method","Syntax":{"content":"public void CloseStream(Quaternion a)","parameters":[{"id":"a","type":"UnityEngine.Quaternion"}],"content.vb":"Public Sub CloseStream(a As Quaternion)"},"File":"obj/api/nuitrack.VicoVRCalibration.RGBCalibrationVisualizer.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration","Type":"namespace","File":"obj/api/nuitrack.VicoVRCalibration.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureCache","Type":"class","Syntax":{"content":"[Serializable]\npublic class TextureCache","content.vb":"<Serializable>\nPublic Class TextureCache"},"File":"obj/api/nuitrack.Frame.TextureCache.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureCache.renderTexture","Type":"field","Syntax":{"content":"public RenderTexture renderTexture","return":{"type":"UnityEngine.RenderTexture"},"content.vb":"Public renderTexture As RenderTexture"},"File":"obj/api/nuitrack.Frame.TextureCache.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureCache.texture2D","Type":"field","Syntax":{"content":"public Texture2D texture2D","return":{"type":"UnityEngine.Texture2D"},"content.vb":"Public texture2D As Texture2D"},"File":"obj/api/nuitrack.Frame.TextureCache.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.TextureCache.timeStamp","Type":"field","Syntax":{"content":"public ulong timeStamp","return":{"type":"System.UInt64"},"content.vb":"Public timeStamp As ULong"},"File":"obj/api/nuitrack.Frame.TextureCache.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerVisuals","Type":"class","Syntax":{"content":"public class PointerVisuals : MonoBehaviour","content.vb":"Public Class PointerVisuals\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.Pointer.PointerVisuals.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame","Type":"namespace","File":"obj/api/nuitrack.Frame.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Button","Type":"enum","Syntax":{"content":"[Flags]\npublic enum Button","content.vb":"<Flags>\nPublic Enum Button"},"File":"obj/api/nuitrack.Pointer.VVRInput.Button.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Button.None","Type":"field","Syntax":{"content":"None = 0","return":{"type":"nuitrack.Pointer.VVRInput.Button"}},"File":"obj/api/nuitrack.Pointer.VVRInput.Button.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Button.Menu","Type":"field","Syntax":{"content":"Menu = 1","return":{"type":"nuitrack.Pointer.VVRInput.Button"}},"File":"obj/api/nuitrack.Pointer.VVRInput.Button.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Button.Home","Type":"field","Syntax":{"content":"Home = 2","return":{"type":"nuitrack.Pointer.VVRInput.Button"}},"File":"obj/api/nuitrack.Pointer.VVRInput.Button.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Button.A","Type":"field","Syntax":{"content":"A = 4","return":{"type":"nuitrack.Pointer.VVRInput.Button"}},"File":"obj/api/nuitrack.Pointer.VVRInput.Button.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Button.B","Type":"field","Syntax":{"content":"B = 8","return":{"type":"nuitrack.Pointer.VVRInput.Button"}},"File":"obj/api/nuitrack.Pointer.VVRInput.Button.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Button.Any","Type":"field","Syntax":{"content":"Any = -1","return":{"type":"nuitrack.Pointer.VVRInput.Button"}},"File":"obj/api/nuitrack.Pointer.VVRInput.Button.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput","Type":"class","Syntax":{"content":"public static class VVRInput","content.vb":"Public Module VVRInput"},"File":"obj/api/nuitrack.Pointer.VVRInput.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.GetStickPos","Type":"method","Syntax":{"content":"public static Vector2 GetStickPos()","return":{"type":"UnityEngine.Vector2"},"content.vb":"Public Shared Function GetStickPos As Vector2"},"File":"obj/api/nuitrack.Pointer.VVRInput.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Get(nuitrack.Pointer.VVRInput.Button)","Type":"method","Syntax":{"content":"public static bool Get(VVRInput.Button virtualMask)","parameters":[{"id":"virtualMask","type":"nuitrack.Pointer.VVRInput.Button"}],"return":{"type":"System.Boolean"},"content.vb":"Public Shared Function Get(virtualMask As VVRInput.Button) As Boolean"},"File":"obj/api/nuitrack.Pointer.VVRInput.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.GetDown(nuitrack.Pointer.VVRInput.Button)","Type":"method","Syntax":{"content":"public static bool GetDown(VVRInput.Button virtualMask)","parameters":[{"id":"virtualMask","type":"nuitrack.Pointer.VVRInput.Button"}],"return":{"type":"System.Boolean"},"content.vb":"Public Shared Function GetDown(virtualMask As VVRInput.Button) As Boolean"},"File":"obj/api/nuitrack.Pointer.VVRInput.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.GetUp(nuitrack.Pointer.VVRInput.Button)","Type":"method","Syntax":{"content":"public static bool GetUp(VVRInput.Button virtualMask)","parameters":[{"id":"virtualMask","type":"nuitrack.Pointer.VVRInput.Button"}],"return":{"type":"System.Boolean"},"content.vb":"Public Shared Function GetUp(virtualMask As VVRInput.Button) As Boolean"},"File":"obj/api/nuitrack.Pointer.VVRInput.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.VVRInput.Init","Type":"method","Syntax":{"content":"public static void Init()","content.vb":"Public Shared Sub Init"},"File":"obj/api/nuitrack.Pointer.VVRInput.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerRotation","Type":"class","Syntax":{"content":"public class PointerRotation : MonoBehaviour","content.vb":"Public Class PointerRotation\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.Pointer.PointerRotation.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerRotation.hand","Type":"field","Syntax":{"content":"public int hand","return":{"type":"System.Int32"},"content.vb":"Public hand As Integer"},"File":"obj/api/nuitrack.Pointer.PointerRotation.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerRotation.target","Type":"field","Syntax":{"content":"public Transform target","return":{"type":"UnityEngine.Transform"},"content.vb":"Public target As Transform"},"File":"obj/api/nuitrack.Pointer.PointerRotation.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerRotation.speed","Type":"field","Syntax":{"content":"public float speed","return":{"type":"System.Single"},"content.vb":"Public speed As Single"},"File":"obj/api/nuitrack.Pointer.PointerRotation.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.SegmentToTexture","Type":"class","Syntax":{"content":"public class SegmentToTexture : FrameToTexture<UserFrame, ushort>","content.vb":"Public Class SegmentToTexture\n    Inherits FrameToTexture(Of UserFrame, UShort)"},"File":"obj/api/nuitrack.Frame.SegmentToTexture.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.SegmentToTexture.OnDestroy","Type":"method","Syntax":{"content":"protected override void OnDestroy()","content.vb":"Protected Overrides Sub OnDestroy"},"File":"obj/api/nuitrack.Frame.SegmentToTexture.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.SegmentToTexture.GetRenderTexture(nuitrack.UserFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public override RenderTexture GetRenderTexture(UserFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">UserFrame converted to RenderTexture</p>\n"},"content.vb":"Public Overrides Function GetRenderTexture(frame As UserFrame, textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.SegmentToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.SegmentToTexture.GetRenderTexture(nuitrack.UserFrame,UnityEngine.Color[],nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public RenderTexture GetRenderTexture(UserFrame frame, Color[] userColors, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"userColors","type":"UnityEngine.Color[]","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Colors for user segments.</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">UserFrame converted to RenderTexture</p>\n"},"content.vb":"Public Function GetRenderTexture(frame As UserFrame, userColors As Color(), textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.SegmentToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.SegmentToTexture.GetTexture2D(nuitrack.UserFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public override Texture2D GetTexture2D(UserFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">UserFrame converted to Texture2D</p>\n"},"content.vb":"Public Overrides Function GetTexture2D(frame As UserFrame, textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.SegmentToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.SegmentToTexture.GetTexture2D(nuitrack.UserFrame,UnityEngine.Color[],nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public Texture2D GetTexture2D(UserFrame frame, Color[] userColors, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"userColors","type":"UnityEngine.Color[]","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Colors for user segments.</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">UserFrame converted to Texture2D</p>\n"},"content.vb":"Public Function GetTexture2D(frame As UserFrame, userColors As Color(), textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.SegmentToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.SegmentToTexture.GetTexture(nuitrack.UserFrame,UnityEngine.Color[],nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public Texture GetTexture(UserFrame frame, Color[] userColors, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"userColors","type":"UnityEngine.Color[]","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Colors for user segments.</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Texture = (RenderTexture or Texture2D)</p>\n"},"content.vb":"Public Function GetTexture(frame As UserFrame, userColors As Color(), textureCache As TextureCache = Nothing) As Texture"},"File":"obj/api/nuitrack.Frame.SegmentToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.SegmentToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.SafetyGrid","Type":"namespace","File":"obj/api/nuitrack.SafetyGrid.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.BackTextureCreator.newBackGroundCreate","Type":"delegate","Syntax":{"content":"public delegate void newBackGroundCreate(Texture txtr, Texture userTxtr);","parameters":[{"id":"txtr","type":"UnityEngine.Texture"},{"id":"userTxtr","type":"UnityEngine.Texture"}],"content.vb":"Public Delegate Sub newBackGroundCreate(txtr As Texture, userTxtr As Texture)"},"File":"obj/api/nuitrack.VicoVRCalibration.BackTextureCreator.newBackGroundCreate.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.SensorDisconnectChecker","Type":"class","Syntax":{"content":"public class SensorDisconnectChecker : MonoBehaviour","content.vb":"Public Class SensorDisconnectChecker\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.VicoVRCalibration.SensorDisconnectChecker.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.SensorDisconnectChecker.SensorConnectionTimeOut","Type":"event","Syntax":{"content":"public static event SensorDisconnectChecker.ConnectionStatusChange SensorConnectionTimeOut","return":{"type":"nuitrack.VicoVRCalibration.SensorDisconnectChecker.ConnectionStatusChange"},"content.vb":"Public Shared Event SensorConnectionTimeOut As SensorDisconnectChecker.ConnectionStatusChange"},"File":"obj/api/nuitrack.VicoVRCalibration.SensorDisconnectChecker.yml","Metadata":{"type":"event","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.VicoVRCalibration.SensorDisconnectChecker.SensorReconnected","Type":"event","Syntax":{"content":"public static event SensorDisconnectChecker.ConnectionStatusChange SensorReconnected","return":{"type":"nuitrack.VicoVRCalibration.SensorDisconnectChecker.ConnectionStatusChange"},"content.vb":"Public Shared Event SensorReconnected As SensorDisconnectChecker.ConnectionStatusChange"},"File":"obj/api/nuitrack.VicoVRCalibration.SensorDisconnectChecker.yml","Metadata":{"type":"event","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.SafetyGrid.SensorPointReplacer","Type":"class","Syntax":{"content":"public class SensorPointReplacer : MonoBehaviour","content.vb":"Public Class SensorPointReplacer\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.SafetyGrid.SensorPointReplacer.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.SafetyGrid.SensorPointReplacer.ChangePlace(UnityEngine.Vector3)","Type":"method","Syntax":{"content":"public void ChangePlace(Vector3 pos)","parameters":[{"id":"pos","type":"UnityEngine.Vector3"}],"content.vb":"Public Sub ChangePlace(pos As Vector3)"},"File":"obj/api/nuitrack.SafetyGrid.SensorPointReplacer.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.PlatformChanger","Type":"namespace","File":"obj/api/nuitrack.PlatformChanger.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils","Type":"class","Syntax":{"content":"public static class FrameOverloadUtils","content.vb":"Public Module FrameOverloadUtils"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToRenderTexture(nuitrack.ColorFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the ColorFrame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","Type":"method","Syntax":{"content":"public static RenderTexture ToRenderTexture(this ColorFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.ColorFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">ColorFrame converted to RenderTexture</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToRenderTexture(frame As ColorFrame, textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the ColorFrame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToTexture2D(nuitrack.ColorFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a ColorFrame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","Type":"method","Syntax":{"content":"public static Texture2D ToTexture2D(this ColorFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.ColorFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">ColorFrame converted to RenderTexture</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToTexture2D(frame As ColorFrame, textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a ColorFrame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToTexture(nuitrack.ColorFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public static Texture ToTexture(this ColorFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.ColorFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Texture = (RenderTexture or Texture2D)</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToTexture(frame As ColorFrame, textureCache As TextureCache = Nothing) As Texture"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToRenderTexture(nuitrack.DepthFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the DepthFrame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","Type":"method","Syntax":{"content":"public static RenderTexture ToRenderTexture(this DepthFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.DepthFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">DepthFrame converted to RenderTexture</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToRenderTexture(frame As DepthFrame, textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the DepthFrame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToTexture2D(nuitrack.DepthFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a DepthFrame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","Type":"method","Syntax":{"content":"public static Texture2D ToTexture2D(this DepthFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.DepthFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">DepthFrame converted to Texture2D</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToTexture2D(frame As DepthFrame, textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a DepthFrame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToTexture(nuitrack.DepthFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public static Texture ToTexture(this DepthFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.DepthFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Texture = (RenderTexture or Texture2D)</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToTexture(frame As DepthFrame, textureCache As TextureCache = Nothing) As Texture"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToRenderTexture(nuitrack.UserFrame,UnityEngine.Color[],nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the UserFrame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","Type":"method","Syntax":{"content":"public static RenderTexture ToRenderTexture(this UserFrame frame, Color[] userColors = null, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"userColors","type":"UnityEngine.Color[]","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Colors for user segments (optional).</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">UserFrame converted to RenderTexture</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToRenderTexture(frame As UserFrame, userColors As Color() = Nothing, textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the UserFrame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToTexture2D(nuitrack.UserFrame,UnityEngine.Color[],nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a UserFrame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","Type":"method","Syntax":{"content":"public static Texture2D ToTexture2D(this UserFrame frame, Color[] userColors = null, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"userColors","type":"UnityEngine.Color[]","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Colors for user segments (optional).</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">UserFrame converted to Texture2D</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToTexture2D(frame As UserFrame, userColors As Color() = Nothing, textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a UserFrame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameOverloadUtils.ToTexture(nuitrack.UserFrame,UnityEngine.Color[],nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public static Texture ToTexture(this UserFrame frame, Color[] userColors = null, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.UserFrame"},{"id":"userColors","type":"UnityEngine.Color[]","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Colors for user segments (optional)</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Texture = (RenderTexture or Texture2D)</p>\n"},"content.vb":"<ExtensionAttribute>\nPublic Shared Function ToTexture(frame As UserFrame, userColors As Color() = Nothing, textureCache As TextureCache = Nothing) As Texture"},"File":"obj/api/nuitrack.Frame.FrameOverloadUtils.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameOverloadUtils.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Pointer.PointerPassing.CalibrationAction","Type":"delegate","Syntax":{"content":"public delegate void CalibrationAction(int handID, float progress);","parameters":[{"id":"handID","type":"System.Int32"},{"id":"progress","type":"System.Single"}],"content.vb":"Public Delegate Sub CalibrationAction(handID As Integer, progress As Single)"},"File":"obj/api/nuitrack.Pointer.PointerPassing.CalibrationAction.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameUtils","Type":"class","Syntax":{"content":"[RequireComponent(typeof(RGBToTexture))]\n[RequireComponent(typeof(DepthToTexture))]\n[RequireComponent(typeof(SegmentToTexture))]\n[RequireComponent(typeof(TextureUtils))]\npublic class FrameUtils : MonoBehaviour","content.vb":"<RequireComponent(GetType(RGBToTexture))>\n<RequireComponent(GetType(DepthToTexture))>\n<RequireComponent(GetType(SegmentToTexture))>\n<RequireComponent(GetType(TextureUtils))>\nPublic Class FrameUtils\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.Frame.FrameUtils.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameUtils.Instance","Type":"property","Syntax":{"content":"public static FrameUtils Instance { get; }","parameters":[],"return":{"type":"nuitrack.Frame.FrameUtils"},"content.vb":"Public Shared ReadOnly Property Instance As FrameUtils"},"File":"obj/api/nuitrack.Frame.FrameUtils.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameUtils.RGBToTexture","Type":"property","Syntax":{"content":"public static RGBToTexture RGBToTexture { get; }","parameters":[],"return":{"type":"nuitrack.Frame.RGBToTexture"},"content.vb":"Public Shared ReadOnly Property RGBToTexture As RGBToTexture"},"File":"obj/api/nuitrack.Frame.FrameUtils.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameUtils.DepthToTexture","Type":"property","Syntax":{"content":"public static DepthToTexture DepthToTexture { get; }","parameters":[],"return":{"type":"nuitrack.Frame.DepthToTexture"},"content.vb":"Public Shared ReadOnly Property DepthToTexture As DepthToTexture"},"File":"obj/api/nuitrack.Frame.FrameUtils.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameUtils.SegmentToTexture","Type":"property","Syntax":{"content":"public static SegmentToTexture SegmentToTexture { get; }","parameters":[],"return":{"type":"nuitrack.Frame.SegmentToTexture"},"content.vb":"Public Shared ReadOnly Property SegmentToTexture As SegmentToTexture"},"File":"obj/api/nuitrack.Frame.FrameUtils.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameUtils.TextureUtils","Type":"property","Syntax":{"content":"public static TextureUtils TextureUtils { get; }","parameters":[],"return":{"type":"nuitrack.Frame.TextureUtils"},"content.vb":"Public Shared ReadOnly Property TextureUtils As TextureUtils"},"File":"obj/api/nuitrack.Frame.FrameUtils.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2","Type":"class","Syntax":{"content":"public abstract class FrameToTexture<T, U> : MonoBehaviour where T : Frame<U> where U : struct","typeParameters":[{"id":"T"},{"id":"U"}],"content.vb":"Public MustInherit Class FrameToTexture(Of T As Frame(Of U), U As Structure)\n    Inherits MonoBehaviour"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.instanceShader","Type":"field","Syntax":{"content":"protected ComputeShader instanceShader","return":{"type":"UnityEngine.ComputeShader"},"content.vb":"Protected instanceShader As ComputeShader"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.localCache","Type":"field","Syntax":{"content":"protected TextureCache localCache","return":{"type":"nuitrack.Frame.TextureCache"},"content.vb":"Protected localCache As TextureCache"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.rect","Type":"field","Syntax":{"content":"protected Rect rect","return":{"type":"UnityEngine.Rect"},"content.vb":"Protected rect As Rect"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.x","Type":"field","Syntax":{"content":"protected uint x","return":{"type":"System.UInt32"},"content.vb":"Protected x As UInteger"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.y","Type":"field","Syntax":{"content":"protected uint y","return":{"type":"System.UInt32"},"content.vb":"Protected y As UInteger"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.z","Type":"field","Syntax":{"content":"protected uint z","return":{"type":"System.UInt32"},"content.vb":"Protected z As UInteger"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.kernelIndex","Type":"field","Syntax":{"content":"protected int kernelIndex","return":{"type":"System.Int32"},"content.vb":"Protected kernelIndex As Integer"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.GPUSupported","Type":"property","Syntax":{"content":"protected bool GPUSupported { get; }","parameters":[],"return":{"type":"System.Boolean"},"content.vb":"Protected ReadOnly Property GPUSupported As Boolean"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.InitShader(System.String)","Type":"method","Syntax":{"content":"protected void InitShader(string kernelName)","parameters":[{"id":"kernelName","type":"System.String"}],"content.vb":"Protected Sub InitShader(kernelName As String)"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.InitRenderTexture(System.Int32,System.Int32)","Type":"method","Syntax":{"content":"protected RenderTexture InitRenderTexture(int width, int height)","parameters":[{"id":"width","type":"System.Int32"},{"id":"height","type":"System.Int32"}],"return":{"type":"UnityEngine.RenderTexture"},"content.vb":"Protected Function InitRenderTexture(width As Integer, height As Integer) As RenderTexture"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.GetRenderTexture(`0,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the frame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","Type":"method","Syntax":{"content":"public abstract RenderTexture GetRenderTexture(T SourceFrame, TextureCache textureCache = null)","parameters":[{"id":"SourceFrame","type":"{T}","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source frame of nuitrack.Frame</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Frame converted to RenderTexture</p>\n"},"content.vb":"Public MustOverride Function GetRenderTexture(SourceFrame As T, textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Get the frame as a RenderTexture. \nRecommended method for platforms with ComputeShader support.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.GetTexture2D(`0,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a frame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","Type":"method","Syntax":{"content":"public abstract Texture2D GetTexture2D(T SourceFrame, TextureCache textureCache = null)","parameters":[{"id":"SourceFrame","type":"{T}","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source frame of nuitrack.Frame</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Frame converted to Texture2D</p>\n"},"content.vb":"Public MustOverride Function GetTexture2D(SourceFrame As T, textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">Get a frame in the form of Texture2D. \nFor platforms with ComputeShader support, it may be slower than GetRenderTexture. \nIf possible, use GetRenderTexture.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.GetTexture(`0,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"5\">Convert Frame to Texture. \nThe method will select the most productive way to get the texture. \nThis can be either RenderTexture or Texture2D. \nUse this method if you don&apos;t care about the texture type.</p>\n","Type":"method","Syntax":{"content":"public virtual Texture GetTexture(T SourceFrame, TextureCache textureCache = null)","parameters":[{"id":"SourceFrame","type":"{T}","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Source frame of nuitrack.Frame</p>\n"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"2\">(optional) If you want to get a separate copy of the texture, \nand not a cached version, pass a reference to the local texture (may affect performance)</p>\n"}],"return":{"type":"UnityEngine.Texture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">Texture = (RenderTexture or Texture2D)</p>\n"},"content.vb":"Public Overridable Function GetTexture(SourceFrame As T, textureCache As TextureCache = Nothing) As Texture"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.FrameToTexture-2.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"5\">Convert Frame to Texture. \nThe method will select the most productive way to get the texture. \nThis can be either RenderTexture or Texture2D. \nUse this method if you don&apos;t care about the texture type.</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.FrameToTexture`2.OnDestroy","Type":"method","Syntax":{"content":"protected virtual void OnDestroy()","content.vb":"Protected Overridable Sub OnDestroy"},"File":"obj/api/nuitrack.Frame.FrameToTexture-2.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.RGBToTexture","Type":"class","Syntax":{"content":"public class RGBToTexture : FrameToTexture<ColorFrame, Color3>","content.vb":"Public Class RGBToTexture\n    Inherits FrameToTexture(Of ColorFrame, Color3)"},"File":"obj/api/nuitrack.Frame.RGBToTexture.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.RGBToTexture.OnDestroy","Type":"method","Syntax":{"content":"protected override void OnDestroy()","content.vb":"Protected Overrides Sub OnDestroy"},"File":"obj/api/nuitrack.Frame.RGBToTexture.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.RGBToTexture.GetRenderTexture(nuitrack.ColorFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.RGBToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public override RenderTexture GetRenderTexture(ColorFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.ColorFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.RGBToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">ColorFrame converted to RenderTexture</p>\n"},"content.vb":"Public Overrides Function GetRenderTexture(frame As ColorFrame, textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.RGBToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.RGBToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.RGBToTexture.GetTexture2D(nuitrack.ColorFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.RGBToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public override Texture2D GetTexture2D(ColorFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.ColorFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.RGBToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">ColorFrame converted to Texture2D</p>\n"},"content.vb":"Public Overrides Function GetTexture2D(frame As ColorFrame, textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.RGBToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.RGBToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.DepthToTexture","Type":"class","Syntax":{"content":"public class DepthToTexture : FrameToTexture<DepthFrame, ushort>","content.vb":"Public Class DepthToTexture\n    Inherits FrameToTexture(Of DepthFrame, UShort)"},"File":"obj/api/nuitrack.Frame.DepthToTexture.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.DepthToTexture.MaxSensorDepth","Type":"property","Syntax":{"content":"public float MaxSensorDepth { get; }","parameters":[],"return":{"type":"System.Single"},"content.vb":"Public ReadOnly Property MaxSensorDepth As Single"},"File":"obj/api/nuitrack.Frame.DepthToTexture.yml","Metadata":{"type":"property","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.DepthToTexture.hFOV","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Get the hFOV of the DepthFrame in degrees</p>\n","Type":"property","Syntax":{"content":"public float hFOV { get; }","parameters":[],"return":{"type":"System.Single"},"content.vb":"Public ReadOnly Property hFOV As Single"},"File":"obj/api/nuitrack.Frame.DepthToTexture.yml","Metadata":{"type":"property","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Get the hFOV of the DepthFrame in degrees</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.DepthToTexture.vFOV","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Get the vFOV of the DepthFrame in degrees</p>\n","Type":"property","Syntax":{"content":"public float vFOV { get; }","parameters":[],"return":{"type":"System.Single"},"content.vb":"Public ReadOnly Property vFOV As Single"},"File":"obj/api/nuitrack.Frame.DepthToTexture.yml","Metadata":{"type":"property","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Get the vFOV of the DepthFrame in degrees</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.DepthToTexture.OnDestroy","Type":"method","Syntax":{"content":"protected override void OnDestroy()","content.vb":"Protected Overrides Sub OnDestroy"},"File":"obj/api/nuitrack.Frame.DepthToTexture.yml","Metadata":{"type":"method","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.DepthToTexture.GetRenderTexture(nuitrack.DepthFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public override RenderTexture GetRenderTexture(DepthFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.DepthFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache"}],"return":{"type":"UnityEngine.RenderTexture","description":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">DepthFrame converted to RenderTexture</p>\n"},"content.vb":"Public Overrides Function GetRenderTexture(frame As DepthFrame, textureCache As TextureCache = Nothing) As RenderTexture"},"File":"obj/api/nuitrack.Frame.DepthToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetRenderTexture(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"nuitrack.Frame.DepthToTexture.GetTexture2D(nuitrack.DepthFrame,nuitrack.Frame.TextureCache)","Summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","Type":"method","Syntax":{"content":"public override Texture2D GetTexture2D(DepthFrame frame, TextureCache textureCache = null)","parameters":[{"id":"frame","type":"nuitrack.DepthFrame"},{"id":"textureCache","type":"nuitrack.Frame.TextureCache"}],"return":{"type":"UnityEngine.Texture2D","description":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"1\" sourceendlinenumber=\"1\">DepthFrame converted to Texture2D</p>\n"},"content.vb":"Public Overrides Function GetTexture2D(frame As DepthFrame, textureCache As TextureCache = Nothing) As Texture2D"},"File":"obj/api/nuitrack.Frame.DepthToTexture.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/nuitrack.Frame.DepthToTexture.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">See the method description: <xref href=\"nuitrack.Frame.FrameToTexture%602.GetTexture2D(%600%2cnuitrack.Frame.TextureCache)\" data-throw-if-not-resolved=\"false\"></xref> </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.Connection","Type":"struct","Syntax":{"content":"[Serializable]\npublic struct Connection","content.vb":"<Serializable>\nPublic Structure Connection"},"File":"obj/api/User.UserAvatar.Connection.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.Connection.From","Type":"field","Syntax":{"content":"public JointType From","return":{"type":"nuitrack.JointType"},"content.vb":"Public From As JointType"},"File":"obj/api/User.UserAvatar.Connection.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.Connection.To","Type":"field","Syntax":{"content":"public JointType To","return":{"type":"nuitrack.JointType"},"content.vb":"Public To As JointType"},"File":"obj/api/User.UserAvatar.Connection.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Skeleton Frame을 구성하는 Joint, JointConnection 생성</p>\n","Type":"class","Syntax":{"content":"public class UserAvatar : MonoBehaviour","content.vb":"Public Class UserAvatar\n    Inherits MonoBehaviour"},"File":"obj/api/User.UserAvatar.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.scale","Type":"field","Syntax":{"content":"[SerializeField]\n[Range(0F, 1F)]\npublic const float scale = 0.001F","return":{"type":"System.Single"},"content.vb":"<SerializeField>\n<Range(0F, 1F)>\nPublic Const scale As Single = 0.001F"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.typeJoint","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint 생성 배열</p>\n","Type":"field","Syntax":{"content":"public JointType[] typeJoint","return":{"type":"nuitrack.JointType[]"},"content.vb":"Public typeJoint As JointType()"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint 생성 배열</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.CreatedJoint","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">입력된 Size에 해당하는 GameObject 배열</p>\n","Type":"field","Syntax":{"content":"public GameObject[] CreatedJoint","return":{"type":"UnityEngine.GameObject[]"},"content.vb":"Public CreatedJoint As GameObject()"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">입력된 Size에 해당하는 GameObject 배열</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.PrefabJoint","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint를 나타낼 prefab</p>\n","Type":"field","Syntax":{"content":"public GameObject PrefabJoint","return":{"type":"UnityEngine.GameObject"},"content.vb":"Public PrefabJoint As GameObject"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint를 나타낼 prefab</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.connectJoint","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">JointConnection 생성 배열</p>\n","Type":"field","Syntax":{"content":"public UserAvatar.Connection[] connectJoint","return":{"type":"User.UserAvatar.Connection[]"},"content.vb":"Public connectJoint As UserAvatar.Connection()"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">JointConnection 생성 배열</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.CreatedConnect","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">입력된 Size에 해당하는 GameObject 배열</p>\n","Type":"field","Syntax":{"content":"public GameObject[] CreatedConnect","return":{"type":"UnityEngine.GameObject[]"},"content.vb":"Public CreatedConnect As GameObject()"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">입력된 Size에 해당하는 GameObject 배열</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.PrefabLine","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">JointConnection을 나타낼 prefab</p>\n","Type":"field","Syntax":{"content":"public GameObject PrefabLine","return":{"type":"UnityEngine.GameObject"},"content.vb":"Public PrefabLine As GameObject"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">JointConnection을 나타낼 prefab</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.VirtualPivot","Summary":"","Type":"field","Syntax":{"content":"public Vector3 VirtualPivot","return":{"type":"UnityEngine.Vector3"},"content.vb":"Public VirtualPivot As Vector3"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"field","summary":"","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.Start","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Unity에서 설정해준 Size값이 Length로 설정<br>\nLength값에 따라 Joint와 JointConnection 생성</p>\n","Type":"method","Syntax":{"content":"public void Start()","content.vb":"Public Sub Start"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"3\">Unity에서 설정해준 Size값이 Length로 설정<br>\nLength값에 따라 Joint와 JointConnection 생성</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.CreateJoint(nuitrack.JointType[],System.Int32)","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint 생성</p>\n","Type":"method","Syntax":{"content":"public void CreateJoint(JointType[] TypeJoint, int JointLength)","parameters":[{"id":"TypeJoint","type":"nuitrack.JointType[]","description":""},{"id":"JointLength","type":"System.Int32","description":""}],"content.vb":"Public Sub CreateJoint(TypeJoint As JointType(), JointLength As Integer)"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint 생성</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.CreateJointConnection(User.UserAvatar.Connection[],System.Int32)","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">ConnectionJoint 생성</p>\n","Type":"method","Syntax":{"content":"public void CreateJointConnection(UserAvatar.Connection[] ConnectJoint, int ConnectionLength)","parameters":[{"id":"ConnectJoint","type":"User.UserAvatar.Connection[]","description":""},{"id":"ConnectionLength","type":"System.Int32","description":""}],"content.vb":"Public Sub CreateJointConnection(ConnectJoint As UserAvatar.Connection(), ConnectionLength As Integer)"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">ConnectionJoint 생성</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.Update","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">User가 있으면 생성된 Joint와 JointConnection을 위치시킴</p>\n","Type":"method","Syntax":{"content":"public void Update()","content.vb":"Public Sub Update"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">User가 있으면 생성된 Joint와 JointConnection을 위치시킴</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.JointPos(nuitrack.Skeleton,System.Int32)","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint Pos설정</p>\n","Type":"method","Syntax":{"content":"public void JointPos(Skeleton skeleton, int JointLength)","parameters":[{"id":"skeleton","type":"nuitrack.Skeleton","description":""},{"id":"JointLength","type":"System.Int32","description":""}],"content.vb":"Public Sub JointPos(skeleton As Skeleton, JointLength As Integer)"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Joint Pos설정</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User.UserAvatar.JointConnectionPos(nuitrack.Skeleton,System.Int32)","Summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">JointConnection Pos설정</p>\n","Type":"method","Syntax":{"content":"public void JointConnectionPos(Skeleton skeleton, int ConnectionLength)","parameters":[{"id":"skeleton","type":"nuitrack.Skeleton","description":""},{"id":"ConnectionLength","type":"System.Int32","description":""}],"content.vb":"Public Sub JointConnectionPos(skeleton As Skeleton, ConnectionLength As Integer)"},"File":"obj/api/User.UserAvatar.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/User.UserAvatar.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">JointConnection Pos설정</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"User","Type":"namespace","File":"obj/api/User.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">UserFrame, ColorFrame 생성과 RayCast를 통한 바닥감지</p>\n","Type":"class","Syntax":{"content":"public class RayScript : MonoBehaviour","content.vb":"Public Class RayScript\n    Inherits MonoBehaviour"},"File":"obj/api/Ray.RayScript.yml","Metadata":{},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.hit","Type":"field","Syntax":{"content":"public RaycastHit hit","return":{"type":"UnityEngine.RaycastHit"},"content.vb":"Public hit As RaycastHit"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.MaxDistance","Type":"field","Syntax":{"content":"public float MaxDistance","return":{"type":"System.Single"},"content.vb":"Public MaxDistance As Single"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.rawColorImg","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">RawImage 타입의 Color Frame 을 담을 변수</p>\n","Type":"field","Syntax":{"content":"[SerializeField]\npublic RawImage rawColorImg","return":{"type":"UnityEngine.UI.RawImage"},"content.vb":"<SerializeField>\nPublic rawColorImg As RawImage"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">RawImage 타입의 Color Frame 을 담을 변수</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.VirtualPivot","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">가상원점</p>\n","Type":"field","Syntax":{"content":"public Vector3 VirtualPivot","return":{"type":"UnityEngine.Vector3"},"content.vb":"Public VirtualPivot As Vector3"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"field","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">가상원점</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.Btn_Count","Type":"field","Syntax":{"content":"public int Btn_Count","return":{"type":"System.Int32"},"content.vb":"Public Btn_Count As Integer"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"field","summary":null,"platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.Start","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Game이 시작되면 UserFrame, ColorFrame Load, RayCasting</p>\n","Type":"method","Syntax":{"content":"public void Start()","content.vb":"Public Sub Start"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">Game이 시작되면 UserFrame, ColorFrame Load, RayCasting</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.Update","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">[구현예정]<br>\n촬영 3번(정면, 측면, 후면) 완료시 다음 씬으로 넘어가기<br>\n해당 위치에 UserFrame, ColorFrame 소멸 </p>\n","Type":"method","Syntax":{"content":"public void Update()","content.vb":"Public Sub Update"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"4\">[구현예정]<br>\n촬영 3번(정면, 측면, 후면) 완료시 다음 씬으로 넘어가기<br>\n해당 위치에 UserFrame, ColorFrame 소멸 </p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.LoadColorFrame(nuitrack.ColorFrame)","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">ColorFrame의 생성, Texture화</p>\n","Type":"method","Syntax":{"content":"public void LoadColorFrame(ColorFrame colorframe)","parameters":[{"id":"colorframe","type":"nuitrack.ColorFrame","description":""}],"content.vb":"Public Sub LoadColorFrame(colorframe As ColorFrame)"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">ColorFrame의 생성, Texture화</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.ColorFrameDestroy","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">ColorFrame의 소멸</p>\n","Type":"method","Syntax":{"content":"public void ColorFrameDestroy()","content.vb":"Public Sub ColorFrameDestroy"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">ColorFrame의 소멸</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.LoadUserFrame(nuitrack.UserFrame)","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">UserFrame의 생성, Texture화</p>\n","Type":"method","Syntax":{"content":"public void LoadUserFrame(UserFrame userframe)","parameters":[{"id":"userframe","type":"nuitrack.UserFrame","description":""}],"content.vb":"Public Sub LoadUserFrame(userframe As UserFrame)"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">UserFrame의 생성, Texture화</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray.RayScript.UserFrameDestroy","Summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">UserFrame의 소멸</p>\n","Type":"method","Syntax":{"content":"public void UserFrameDestroy()","content.vb":"Public Sub UserFrameDestroy"},"File":"obj/api/Ray.RayScript.yml","Metadata":{"type":"method","summary":"<p sourcefile=\"obj/api/Ray.RayScript.yml\" sourcestartlinenumber=\"2\" sourceendlinenumber=\"2\">UserFrame의 소멸</p>\n","platform":null},"IsExplicitInterfaceImplementation":false},{"Uid":"Ray","Type":"namespace","File":"obj/api/Ray.yml","Metadata":{},"IsExplicitInterfaceImplementation":false}]